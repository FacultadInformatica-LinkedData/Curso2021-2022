# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-gTb_u4-_I9WsRCfGA87qXL9KLveOh6G

**Task 07: Querying RDF(s)**
"""

#!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")
for s, p, o in g:
  print(s,p,o)

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")

for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
    print(s) 

q1 = prepareQuery('''
  SELECT ?Subject WHERE {
    ?Subject <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://somewhere#Person>.
  }
  '''
)
for r in g.query(q1):
  print(r.Subject)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")

for s,p,o in g.triples((None, RDF.type, ns.Person)):
    print(s)
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):    
    for s1,p1,o1 in g.triples((None, RDF.type, s)):
        print(s1)

q1 = prepareQuery('''
  SELECT ?Subject WHERE {
  {
    ?Subject <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://somewhere#Person>.
  } UNION {
    ?aux <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://somewhere#Person>.
    ?Subject <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?aux
  }
  }
  '''
)
for r in g.query(q1):
  print(r.Subject)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

from rdflib.plugins.sparql import prepareQuery
ns = Namespace("http://somewhere#")

for s,p,o in g.triples((None, RDF.type, ns.Person)):
    for s1,p1,o1 in g.triples((s, None, None)):
        print(s1,p1,o1)

for s2,p2,o2 in g.triples((None, RDFS.subClassOf, ns.Person)):
    for s3,p3,o3 in g.triples((None, RDF.type, s2)):
        for s4,p4,o4 in g.triples((s3,None,None)):
            print(s4,p4,o4)

q1 = prepareQuery('''
  SELECT ?Subject ?Propertie ?Object WHERE {
  {
    ?Subject <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://somewhere#Person>.
    ?Subject ?Propertie ?Object.
  } UNION {
    ?Subject <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> ?aux.
    ?Subject ?Propertie ?Object.
    ?aux <http://www.w3.org/2000/01/rdf-schema#subClassOf> <http://somewhere#Person>.
  }
  }
  '''
)
for r in g.query(q1):
  print('SPARQL' + r.Subject, r.Propertie, r.Object)