# -*- coding: utf-8 -*-
"""Task07.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iEKASkuUpnllqG6LFbIl5Ep5WvLFiiqn

**Task 07: Querying RDF(s)**
"""

#!pip install rdflib 
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

"""Leemos el fichero RDF de la forma que lo hemos venido haciendo"""

from rdflib import Graph, Namespace, Literal
from rdflib.namespace import RDF, RDFS
g = Graph()
g.namespace_manager.bind('ns', Namespace("http://somewhere#"), override=False)
g.namespace_manager.bind('vcard', Namespace("http://www.w3.org/2001/vcard-rdf/3.0#"), override=False)
g.parse(github_storage+"/rdf/example6.rdf", format="xml")

"""**TASK 7.1: List all subclasses of "Person" with RDFLib and SPARQL**"""

# TO DO
# Visualize the results
from rdflib.plugins.sparql import prepareQuery

ns = Namespace("http://somewhere#")

q1 = prepareQuery('''
  SELECT ?Subject WHERE { 
    ?Subject rdfs:subClassOf ns:Person.
  }
  '''
  ,initNs = {"ns" : ns}
)

for r in g.query(q1):
  print(r.Subject)

for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  print(s)

"""**TASK 7.2: List all individuals of "Person" with RDFLib and SPARQL (remember the subClasses)**

"""

# TO DO
# Visualize the results
q1 = prepareQuery('''
  SELECT DISTINCT ?Subject WHERE { 
     {?Subject a ns:Person}
    UNION
    {?sc rdfs:subClassOf* ns:Person.
    ?Subject a ?sc.}
  }
  '''
  ,initNs = {"ns" : ns}
)

for r in g.query(q1):
  print(r.Subject)

for s,p,o in g.triples((None, RDF.type, ns.Person)):
  print(s)
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for x,p,o in g.triples((None, RDF.type, s)):
    print(x)

"""**TASK 7.3: List all individuals of "Person" and all their properties including their class with RDFLib and SPARQL**

"""

# TO DO
# Visualize the results
q1 = prepareQuery('''
  SELECT ?Subject ?p WHERE { 
    {?Subject ?p ?o.
    ?Subject a ns:Person}
    UNION
    {?o rdfs:subClassOf* ns:Person.
    ?Subject a ?o.
    ?Subject ?p ?sc}

    
  }
  '''
  ,initNs = {"ns" : ns}
)

for r in g.query(q1):
  print(r.Subject, r.p)

for s,p,o in g.triples((None, RDF.type, ns.Person)):
  for x,y,z in g.triples((s,None,None)):
    print(x,y)
for s,p,o in g.triples((None, RDFS.subClassOf, ns.Person)):
  for t,p,o in g.triples((None, RDF.type, s)):
    for x,y,z in g.triples((t,None,None)):
      print(x,y)